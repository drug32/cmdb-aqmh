<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:redis="http://www.springframework.org/schema/redis"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	<aop:aspectj-autoproxy expose-proxy="true"/>	
    <bean name="dataSource_platform" class="org.apache.tomcat.jdbc.pool.DataSource">
		<property name="driverClassName" value="ru.yandex.clickhouse.ClickHouseDriver" />
		<!--<property name="url" value="jdbc:postgresql://134.95.224.203:18922/qysjhzkpiin" />
		<property name="username"><value>qysjhzkpiin</value></property>
		<property name="password"><value>Qysjhzkpiin!@#123</value></property>-->
		<property name="url" value="jdbc:clickhouse://22.0.0.101:18666/aqmh" />
		<property name="username"><value>default</value></property>
		<property name="password"><value></value></property>
		<property name="testWhileIdle"><value>true</value></property>
		  <property name="validationInterval"><value>60000</value></property>
		  <property name="validationQuery"><value>select 1</value></property>
		  <property name="testOnBorrow"><value>true</value></property>
		  <property name="initialSize" value="1"/>  
		  <property name="maxIdle" value="20"/>  
		  <property name="minIdle" value="1"/>  
		  <property name="maxActive" value="20"/>  
		  <property name="logValidationErrors" value="true"/>
		  <property name="removeAbandoned" value="true"/>
		  <property name="removeAbandonedTimeout" value="120000"/>
		  <property name="logAbandoned" value="true"/>
		  <property name="suspectTimeout" value="30000"/>
    </bean>
    <bean id="connectionFactory" class="com.chinatelecom.udp.core.dataaccess.database.ConnectionFactory">
       <property name="DataSource">  
           <map>  
               <entry key="default" value-ref="dataSource_platform">  
               </entry>
               <entry key="platform" value-ref="dataSource_platform">  
               </entry>
           </map>  
       </property> 
   </bean>
	<!-- 配置事务管理器 -->
<!--	 <bean id="transactionManagerDB" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_platform" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManagerDB"/>-->
    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    </bean>
	<context:component-scan
		base-package="com.chinatelecom.udp com.ahchinatelecom.auth com.chinatelecom.operations.aqmhserivce">
		<context:exclude-filter type="assignable" expression="com.chinatelecom.udp.core.cmclient.entity.CMItem"/>
		<context:exclude-filter type="assignable" expression="com.chinatelecom.udp.core.userrights.entity.SystemInfo"/>
		<context:exclude-filter type="assignable" expression="com.chinatelecom.udp.core.userrights.entity.SystemMenuInfo"/>
		<context:exclude-filter type="assignable" expression="com.chinatelecom.udp.core.userrights.entity.SystemPageInfo"/>
		<context:exclude-filter type="assignable" expression="com.chinatelecom.udp.core.userrights.entity.SystemPageModuleInfo"/>
		<context:exclude-filter type="assignable" expression="com.chinatelecom.udp.core.userrights.entity.SystemPageResourceInfo"/>
		<context:exclude-filter type="assignable" expression="com.chinatelecom.udp.core.userrights.entity.SystemRoleInfo"/>
		<context:exclude-filter type="assignable" expression="com.chinatelecom.udp.core.userrights.entity.SystemUsersDataAreaInfo"/>
		<context:exclude-filter type="assignable" expression="com.chinatelecom.udp.core.userrights.entity.UserExtraInfo"/>
		<context:exclude-filter type="assignable" expression="com.chinatelecom.udp.core.userrights.entity.LoginUserInfo"/>
	</context:component-scan>
	<!-- 集成mybatis-plus -->

	<bean id="sqlSessionFactoryBean"
		  class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource_platform"></property>
		<!-- 自动扫描Mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="typeAliasesPackage" value="com.chinatelecom.operations.aqmhserivce.entity"></property>
	</bean>
	<!--配置逻辑删除-->
	<bean id="dbConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig.DbConfig">
		<property name="logicDeleteValue" value="1"/>
		<property name="logicNotDeleteValue" value="0"/>
	</bean>

	<!--
    配置 mybatis 扫描 mapper 接口的路径
    -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--注入sqlSessionFactoryBean-->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property>
		<!--要扫描的dao层包-->
		<property name="basePackage"
				  value="com.chinatelecom.operations.aqmhserivce.mapper"></property>
	</bean>


	<!-- 载入redis.properties,这里要特别注意，如果有多个properties文件，必须用逗号分开，不能写成两个 <context:property-placeholder/> -->
	<context:property-placeholder location="classpath:redis.properties" />
	<!-- 配置JedisPoolConfig连接池-->
	<!-- redis连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="30" />
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="10" />
		<!-- 每次释放连接的最大数目 -->
		<property name="numTestsPerEvictionRun" value="1024" />
		<!-- 释放连接的扫描间隔（毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		<!-- 连接最小空闲时间 -->
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
		<property name="softMinEvictableIdleTimeMillis" value="10000" />
		<!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
		<property name="maxWaitMillis" value="1500" />
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="true" />
		<!-- 在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="true" />
		<!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
		<property name="blockWhenExhausted" value="false" />
	</bean>
	<!-- 配置jedis连接工厂 -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${spring.redis.host}"/>
		<property name="port" value="${spring.redis.port}"/>
		<property name="password" value="${spring.redis.password}" />
		<property name="database" value="${spring.redis.database}"/>
		<property name="usePool" value="true"/>
		<constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
	</bean>
	<!-- 配置RedisTemplate -->
	<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer" ref="stringRedisSerializer" />
		<property name="hashKeySerializer" ref="stringRedisSerializer" />
		<property name="valueSerializer" ref="stringRedisSerializer" />
		<property name="hashValueSerializer" ref="stringRedisSerializer" />
	</bean>
<aop:aspectj-autoproxy/>
</beans>

